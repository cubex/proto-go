// Code generated by protoc-gen-go.
// source: adl.proto
// DO NOT EDIT!

/*
Package adl is a generated protocol buffer package.

It is generated from these files:
	adl.proto

It has these top-level messages:
	Property
	ReadProperty
	ReadPropertyRange
	MutationRequest
	ReadRequest
	MutationResponse
	PropertiesResponse
	ListAddRequest
	KeyRequest
	ListItemResponse
	ListItemsResponse
	ListRangeRequest
	ListAddResponse
	ListRemoveResponse
*/
package adl

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PropertyType int32

const (
	PropertyType_META    PropertyType = 0
	PropertyType_DATA    PropertyType = 1
	PropertyType_COUNTER PropertyType = 2
	PropertyType_SET     PropertyType = 3
	PropertyType_LIST    PropertyType = 4
)

var PropertyType_name = map[int32]string{
	0: "META",
	1: "DATA",
	2: "COUNTER",
	3: "SET",
	4: "LIST",
}
var PropertyType_value = map[string]int32{
	"META":    0,
	"DATA":    1,
	"COUNTER": 2,
	"SET":     3,
	"LIST":    4,
}

func (x PropertyType) String() string {
	return proto.EnumName(PropertyType_name, int32(x))
}
func (PropertyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MutationMode int32

const (
	MutationMode_NONE   MutationMode = 0
	MutationMode_WRITE  MutationMode = 1
	MutationMode_APPEND MutationMode = 2
	MutationMode_REMOVE MutationMode = 3
	MutationMode_DELETE MutationMode = 4
)

var MutationMode_name = map[int32]string{
	0: "NONE",
	1: "WRITE",
	2: "APPEND",
	3: "REMOVE",
	4: "DELETE",
}
var MutationMode_value = map[string]int32{
	"NONE":   0,
	"WRITE":  1,
	"APPEND": 2,
	"REMOVE": 3,
	"DELETE": 4,
}

func (x MutationMode) String() string {
	return proto.EnumName(MutationMode_name, int32(x))
}
func (MutationMode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type MutationStatus int32

const (
	MutationStatus_FAILURE MutationStatus = 0
	MutationStatus_SUCCESS MutationStatus = 1
)

var MutationStatus_name = map[int32]string{
	0: "FAILURE",
	1: "SUCCESS",
}
var MutationStatus_value = map[string]int32{
	"FAILURE": 0,
	"SUCCESS": 1,
}

func (x MutationStatus) String() string {
	return proto.EnumName(MutationStatus_name, int32(x))
}
func (MutationStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Property struct {
	Property string       `protobuf:"bytes,1,opt,name=property" json:"property,omitempty"`
	Type     PropertyType `protobuf:"varint,2,opt,name=type,enum=adl.PropertyType" json:"type,omitempty"`
	Value    string       `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	Mode     MutationMode `protobuf:"varint,4,opt,name=mode,enum=adl.MutationMode" json:"mode,omitempty"`
	Index    bool         `protobuf:"varint,5,opt,name=index" json:"index,omitempty"`
}

func (m *Property) Reset()                    { *m = Property{} }
func (m *Property) String() string            { return proto.CompactTextString(m) }
func (*Property) ProtoMessage()               {}
func (*Property) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Property) GetProperty() string {
	if m != nil {
		return m.Property
	}
	return ""
}

func (m *Property) GetType() PropertyType {
	if m != nil {
		return m.Type
	}
	return PropertyType_META
}

func (m *Property) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Property) GetMode() MutationMode {
	if m != nil {
		return m.Mode
	}
	return MutationMode_NONE
}

func (m *Property) GetIndex() bool {
	if m != nil {
		return m.Index
	}
	return false
}

type ReadProperty struct {
	Property string       `protobuf:"bytes,1,opt,name=property" json:"property,omitempty"`
	Type     PropertyType `protobuf:"varint,2,opt,name=type,enum=adl.PropertyType" json:"type,omitempty"`
	IsPrefix bool         `protobuf:"varint,3,opt,name=is_prefix,json=isPrefix" json:"is_prefix,omitempty"`
}

func (m *ReadProperty) Reset()                    { *m = ReadProperty{} }
func (m *ReadProperty) String() string            { return proto.CompactTextString(m) }
func (*ReadProperty) ProtoMessage()               {}
func (*ReadProperty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ReadProperty) GetProperty() string {
	if m != nil {
		return m.Property
	}
	return ""
}

func (m *ReadProperty) GetType() PropertyType {
	if m != nil {
		return m.Type
	}
	return PropertyType_META
}

func (m *ReadProperty) GetIsPrefix() bool {
	if m != nil {
		return m.IsPrefix
	}
	return false
}

type ReadPropertyRange struct {
	Start   string       `protobuf:"bytes,1,opt,name=start" json:"start,omitempty"`
	End     string       `protobuf:"bytes,2,opt,name=end" json:"end,omitempty"`
	Type    PropertyType `protobuf:"varint,3,opt,name=type,enum=adl.PropertyType" json:"type,omitempty"`
	Reverse bool         `protobuf:"varint,4,opt,name=reverse" json:"reverse,omitempty"`
	Limit   int32        `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
}

func (m *ReadPropertyRange) Reset()                    { *m = ReadPropertyRange{} }
func (m *ReadPropertyRange) String() string            { return proto.CompactTextString(m) }
func (*ReadPropertyRange) ProtoMessage()               {}
func (*ReadPropertyRange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReadPropertyRange) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *ReadPropertyRange) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *ReadPropertyRange) GetType() PropertyType {
	if m != nil {
		return m.Type
	}
	return PropertyType_META
}

func (m *ReadPropertyRange) GetReverse() bool {
	if m != nil {
		return m.Reverse
	}
	return false
}

func (m *ReadPropertyRange) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type MutationRequest struct {
	Fid        string      `protobuf:"bytes,1,opt,name=fid" json:"fid,omitempty"`
	Properties []*Property `protobuf:"bytes,2,rep,name=properties" json:"properties,omitempty"`
	MemberId   string      `protobuf:"bytes,3,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
}

func (m *MutationRequest) Reset()                    { *m = MutationRequest{} }
func (m *MutationRequest) String() string            { return proto.CompactTextString(m) }
func (*MutationRequest) ProtoMessage()               {}
func (*MutationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MutationRequest) GetFid() string {
	if m != nil {
		return m.Fid
	}
	return ""
}

func (m *MutationRequest) GetProperties() []*Property {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *MutationRequest) GetMemberId() string {
	if m != nil {
		return m.MemberId
	}
	return ""
}

type ReadRequest struct {
	Fid        string               `protobuf:"bytes,1,opt,name=fid" json:"fid,omitempty"`
	MemberId   string               `protobuf:"bytes,2,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	Properties []*ReadProperty      `protobuf:"bytes,3,rep,name=properties" json:"properties,omitempty"`
	Ranges     []*ReadPropertyRange `protobuf:"bytes,4,rep,name=ranges" json:"ranges,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadRequest) GetFid() string {
	if m != nil {
		return m.Fid
	}
	return ""
}

func (m *ReadRequest) GetMemberId() string {
	if m != nil {
		return m.MemberId
	}
	return ""
}

func (m *ReadRequest) GetProperties() []*ReadProperty {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *ReadRequest) GetRanges() []*ReadPropertyRange {
	if m != nil {
		return m.Ranges
	}
	return nil
}

type MutationResponse struct {
	Fid           string         `protobuf:"bytes,1,opt,name=fid" json:"fid,omitempty"`
	Status        MutationStatus `protobuf:"varint,2,opt,name=status,enum=adl.MutationStatus" json:"status,omitempty"`
	StatusMessage string         `protobuf:"bytes,3,opt,name=status_message,json=statusMessage" json:"status_message,omitempty"`
}

func (m *MutationResponse) Reset()                    { *m = MutationResponse{} }
func (m *MutationResponse) String() string            { return proto.CompactTextString(m) }
func (*MutationResponse) ProtoMessage()               {}
func (*MutationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *MutationResponse) GetFid() string {
	if m != nil {
		return m.Fid
	}
	return ""
}

func (m *MutationResponse) GetStatus() MutationStatus {
	if m != nil {
		return m.Status
	}
	return MutationStatus_FAILURE
}

func (m *MutationResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

type PropertiesResponse struct {
	Fid        string      `protobuf:"bytes,1,opt,name=fid" json:"fid,omitempty"`
	Properties []*Property `protobuf:"bytes,2,rep,name=properties" json:"properties,omitempty"`
}

func (m *PropertiesResponse) Reset()                    { *m = PropertiesResponse{} }
func (m *PropertiesResponse) String() string            { return proto.CompactTextString(m) }
func (*PropertiesResponse) ProtoMessage()               {}
func (*PropertiesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PropertiesResponse) GetFid() string {
	if m != nil {
		return m.Fid
	}
	return ""
}

func (m *PropertiesResponse) GetProperties() []*Property {
	if m != nil {
		return m.Properties
	}
	return nil
}

type ListAddRequest struct {
	Fid      string `protobuf:"bytes,1,opt,name=fid" json:"fid,omitempty"`
	ListName string `protobuf:"bytes,2,opt,name=list_name,json=listName" json:"list_name,omitempty"`
	Key      string `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
	Value    string `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	MemberId string `protobuf:"bytes,5,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
}

func (m *ListAddRequest) Reset()                    { *m = ListAddRequest{} }
func (m *ListAddRequest) String() string            { return proto.CompactTextString(m) }
func (*ListAddRequest) ProtoMessage()               {}
func (*ListAddRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ListAddRequest) GetFid() string {
	if m != nil {
		return m.Fid
	}
	return ""
}

func (m *ListAddRequest) GetListName() string {
	if m != nil {
		return m.ListName
	}
	return ""
}

func (m *ListAddRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ListAddRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *ListAddRequest) GetMemberId() string {
	if m != nil {
		return m.MemberId
	}
	return ""
}

type KeyRequest struct {
	Fid      string `protobuf:"bytes,1,opt,name=fid" json:"fid,omitempty"`
	ListName string `protobuf:"bytes,2,opt,name=list_name,json=listName" json:"list_name,omitempty"`
	Key      string `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
	MemberId string `protobuf:"bytes,4,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
}

func (m *KeyRequest) Reset()                    { *m = KeyRequest{} }
func (m *KeyRequest) String() string            { return proto.CompactTextString(m) }
func (*KeyRequest) ProtoMessage()               {}
func (*KeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *KeyRequest) GetFid() string {
	if m != nil {
		return m.Fid
	}
	return ""
}

func (m *KeyRequest) GetListName() string {
	if m != nil {
		return m.ListName
	}
	return ""
}

func (m *KeyRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyRequest) GetMemberId() string {
	if m != nil {
		return m.MemberId
	}
	return ""
}

type ListItemResponse struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *ListItemResponse) Reset()                    { *m = ListItemResponse{} }
func (m *ListItemResponse) String() string            { return proto.CompactTextString(m) }
func (*ListItemResponse) ProtoMessage()               {}
func (*ListItemResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ListItemResponse) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ListItemResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ListItemsResponse struct {
	Fid      string              `protobuf:"bytes,1,opt,name=fid" json:"fid,omitempty"`
	ListName string              `protobuf:"bytes,2,opt,name=list_name,json=listName" json:"list_name,omitempty"`
	Items    []*ListItemResponse `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
}

func (m *ListItemsResponse) Reset()                    { *m = ListItemsResponse{} }
func (m *ListItemsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListItemsResponse) ProtoMessage()               {}
func (*ListItemsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ListItemsResponse) GetFid() string {
	if m != nil {
		return m.Fid
	}
	return ""
}

func (m *ListItemsResponse) GetListName() string {
	if m != nil {
		return m.ListName
	}
	return ""
}

func (m *ListItemsResponse) GetItems() []*ListItemResponse {
	if m != nil {
		return m.Items
	}
	return nil
}

type ListRangeRequest struct {
	Fid      string `protobuf:"bytes,1,opt,name=fid" json:"fid,omitempty"`
	ListName string `protobuf:"bytes,2,opt,name=list_name,json=listName" json:"list_name,omitempty"`
	StartKey string `protobuf:"bytes,3,opt,name=start_key,json=startKey" json:"start_key,omitempty"`
	EndKey   string `protobuf:"bytes,4,opt,name=end_key,json=endKey" json:"end_key,omitempty"`
	Reverse  bool   `protobuf:"varint,5,opt,name=reverse" json:"reverse,omitempty"`
	Limit    int32  `protobuf:"varint,6,opt,name=limit" json:"limit,omitempty"`
	MemberId string `protobuf:"bytes,7,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
}

func (m *ListRangeRequest) Reset()                    { *m = ListRangeRequest{} }
func (m *ListRangeRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRangeRequest) ProtoMessage()               {}
func (*ListRangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ListRangeRequest) GetFid() string {
	if m != nil {
		return m.Fid
	}
	return ""
}

func (m *ListRangeRequest) GetListName() string {
	if m != nil {
		return m.ListName
	}
	return ""
}

func (m *ListRangeRequest) GetStartKey() string {
	if m != nil {
		return m.StartKey
	}
	return ""
}

func (m *ListRangeRequest) GetEndKey() string {
	if m != nil {
		return m.EndKey
	}
	return ""
}

func (m *ListRangeRequest) GetReverse() bool {
	if m != nil {
		return m.Reverse
	}
	return false
}

func (m *ListRangeRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListRangeRequest) GetMemberId() string {
	if m != nil {
		return m.MemberId
	}
	return ""
}

type ListAddResponse struct {
	Success bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *ListAddResponse) Reset()                    { *m = ListAddResponse{} }
func (m *ListAddResponse) String() string            { return proto.CompactTextString(m) }
func (*ListAddResponse) ProtoMessage()               {}
func (*ListAddResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ListAddResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ListAddResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ListRemoveResponse struct {
	Success bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *ListRemoveResponse) Reset()                    { *m = ListRemoveResponse{} }
func (m *ListRemoveResponse) String() string            { return proto.CompactTextString(m) }
func (*ListRemoveResponse) ProtoMessage()               {}
func (*ListRemoveResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ListRemoveResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ListRemoveResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Property)(nil), "adl.Property")
	proto.RegisterType((*ReadProperty)(nil), "adl.ReadProperty")
	proto.RegisterType((*ReadPropertyRange)(nil), "adl.ReadPropertyRange")
	proto.RegisterType((*MutationRequest)(nil), "adl.MutationRequest")
	proto.RegisterType((*ReadRequest)(nil), "adl.ReadRequest")
	proto.RegisterType((*MutationResponse)(nil), "adl.MutationResponse")
	proto.RegisterType((*PropertiesResponse)(nil), "adl.PropertiesResponse")
	proto.RegisterType((*ListAddRequest)(nil), "adl.ListAddRequest")
	proto.RegisterType((*KeyRequest)(nil), "adl.KeyRequest")
	proto.RegisterType((*ListItemResponse)(nil), "adl.ListItemResponse")
	proto.RegisterType((*ListItemsResponse)(nil), "adl.ListItemsResponse")
	proto.RegisterType((*ListRangeRequest)(nil), "adl.ListRangeRequest")
	proto.RegisterType((*ListAddResponse)(nil), "adl.ListAddResponse")
	proto.RegisterType((*ListRemoveResponse)(nil), "adl.ListRemoveResponse")
	proto.RegisterEnum("adl.PropertyType", PropertyType_name, PropertyType_value)
	proto.RegisterEnum("adl.MutationMode", MutationMode_name, MutationMode_value)
	proto.RegisterEnum("adl.MutationStatus", MutationStatus_name, MutationStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Adl service

type AdlClient interface {
	Mutate(ctx context.Context, in *MutationRequest, opts ...grpc.CallOption) (*MutationResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*PropertiesResponse, error)
	ListAdd(ctx context.Context, in *ListAddRequest, opts ...grpc.CallOption) (*ListAddResponse, error)
	ListRemove(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*ListRemoveResponse, error)
	ListRetrieveItem(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*ListItemResponse, error)
	ListRange(ctx context.Context, in *ListRangeRequest, opts ...grpc.CallOption) (*ListItemsResponse, error)
}

type adlClient struct {
	cc *grpc.ClientConn
}

func NewAdlClient(cc *grpc.ClientConn) AdlClient {
	return &adlClient{cc}
}

func (c *adlClient) Mutate(ctx context.Context, in *MutationRequest, opts ...grpc.CallOption) (*MutationResponse, error) {
	out := new(MutationResponse)
	err := grpc.Invoke(ctx, "/adl.Adl/Mutate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adlClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*PropertiesResponse, error) {
	out := new(PropertiesResponse)
	err := grpc.Invoke(ctx, "/adl.Adl/Read", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adlClient) ListAdd(ctx context.Context, in *ListAddRequest, opts ...grpc.CallOption) (*ListAddResponse, error) {
	out := new(ListAddResponse)
	err := grpc.Invoke(ctx, "/adl.Adl/ListAdd", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adlClient) ListRemove(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*ListRemoveResponse, error) {
	out := new(ListRemoveResponse)
	err := grpc.Invoke(ctx, "/adl.Adl/ListRemove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adlClient) ListRetrieveItem(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*ListItemResponse, error) {
	out := new(ListItemResponse)
	err := grpc.Invoke(ctx, "/adl.Adl/ListRetrieveItem", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adlClient) ListRange(ctx context.Context, in *ListRangeRequest, opts ...grpc.CallOption) (*ListItemsResponse, error) {
	out := new(ListItemsResponse)
	err := grpc.Invoke(ctx, "/adl.Adl/ListRange", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Adl service

type AdlServer interface {
	Mutate(context.Context, *MutationRequest) (*MutationResponse, error)
	Read(context.Context, *ReadRequest) (*PropertiesResponse, error)
	ListAdd(context.Context, *ListAddRequest) (*ListAddResponse, error)
	ListRemove(context.Context, *KeyRequest) (*ListRemoveResponse, error)
	ListRetrieveItem(context.Context, *KeyRequest) (*ListItemResponse, error)
	ListRange(context.Context, *ListRangeRequest) (*ListItemsResponse, error)
}

func RegisterAdlServer(s *grpc.Server, srv AdlServer) {
	s.RegisterService(&_Adl_serviceDesc, srv)
}

func _Adl_Mutate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MutationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdlServer).Mutate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adl.Adl/Mutate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdlServer).Mutate(ctx, req.(*MutationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adl_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdlServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adl.Adl/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdlServer).Read(ctx, req.(*ReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adl_ListAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdlServer).ListAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adl.Adl/ListAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdlServer).ListAdd(ctx, req.(*ListAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adl_ListRemove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdlServer).ListRemove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adl.Adl/ListRemove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdlServer).ListRemove(ctx, req.(*KeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adl_ListRetrieveItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdlServer).ListRetrieveItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adl.Adl/ListRetrieveItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdlServer).ListRetrieveItem(ctx, req.(*KeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adl_ListRange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdlServer).ListRange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adl.Adl/ListRange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdlServer).ListRange(ctx, req.(*ListRangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Adl_serviceDesc = grpc.ServiceDesc{
	ServiceName: "adl.Adl",
	HandlerType: (*AdlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Mutate",
			Handler:    _Adl_Mutate_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _Adl_Read_Handler,
		},
		{
			MethodName: "ListAdd",
			Handler:    _Adl_ListAdd_Handler,
		},
		{
			MethodName: "ListRemove",
			Handler:    _Adl_ListRemove_Handler,
		},
		{
			MethodName: "ListRetrieveItem",
			Handler:    _Adl_ListRetrieveItem_Handler,
		},
		{
			MethodName: "ListRange",
			Handler:    _Adl_ListRange_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "adl.proto",
}

func init() { proto.RegisterFile("adl.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 864 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x56, 0xdf, 0x6e, 0xda, 0x56,
	0x18, 0xaf, 0xb1, 0xc1, 0xe6, 0x4b, 0x9a, 0x38, 0xa7, 0x69, 0x6b, 0xa5, 0x9a, 0x16, 0x59, 0xaa,
	0x14, 0xa5, 0x6a, 0xa2, 0x66, 0x7f, 0x2e, 0x7a, 0x47, 0x13, 0x6f, 0x43, 0x05, 0x82, 0x0e, 0x66,
	0x93, 0x76, 0x83, 0x0c, 0xfe, 0xca, 0xbc, 0x61, 0x9b, 0xf9, 0x18, 0x04, 0xf7, 0x7b, 0x82, 0xbd,
	0xc0, 0xf6, 0x30, 0x7b, 0x85, 0xbd, 0xcf, 0x74, 0x8e, 0x8f, 0x8d, 0x4d, 0x29, 0xd2, 0xb6, 0xdc,
	0x7d, 0x7f, 0xfd, 0xfd, 0xce, 0xef, 0xfb, 0x03, 0xd0, 0xf4, 0xfc, 0xd9, 0xd5, 0x3c, 0x89, 0xd3,
	0x98, 0xa8, 0x9e, 0x3f, 0xb3, 0xff, 0x54, 0xc0, 0xe8, 0x27, 0xf1, 0x1c, 0x93, 0x74, 0x4d, 0xce,
	0xc0, 0x98, 0x4b, 0xd9, 0x52, 0xce, 0x95, 0x8b, 0x26, 0x2d, 0x74, 0xf2, 0x12, 0xb4, 0x74, 0x3d,
	0x47, 0xab, 0x76, 0xae, 0x5c, 0x1c, 0xdd, 0x9c, 0x5c, 0xf1, 0xef, 0xe4, 0x89, 0xee, 0x7a, 0x8e,
	0x54, 0xb8, 0xc9, 0x29, 0xd4, 0x97, 0xde, 0x6c, 0x81, 0x96, 0x2a, 0xf2, 0x33, 0x85, 0x27, 0x87,
	0xb1, 0x8f, 0x96, 0x56, 0x4a, 0xee, 0x2e, 0x52, 0x2f, 0x0d, 0xe2, 0xa8, 0x1b, 0xfb, 0x48, 0x85,
	0x9b, 0x27, 0x07, 0x91, 0x8f, 0x2b, 0xab, 0x7e, 0xae, 0x5c, 0x18, 0x34, 0x53, 0xec, 0x08, 0x0e,
	0x29, 0x7a, 0xfe, 0x43, 0xa2, 0x7c, 0x01, 0xcd, 0x80, 0x8d, 0xe6, 0x09, 0x7e, 0x08, 0x56, 0x02,
	0xa9, 0x41, 0x8d, 0x80, 0xf5, 0x85, 0x6e, 0xff, 0xae, 0xc0, 0x49, 0xb9, 0x20, 0xf5, 0xa2, 0xa9,
	0xc0, 0xc6, 0x52, 0x2f, 0x49, 0x65, 0xc9, 0x4c, 0x21, 0x26, 0xa8, 0x18, 0xf9, 0xa2, 0x5c, 0x93,
	0x72, 0xb1, 0x40, 0xa0, 0xee, 0x47, 0x60, 0x81, 0x9e, 0xe0, 0x12, 0x13, 0x96, 0x91, 0x62, 0xd0,
	0x5c, 0xe5, 0x85, 0x66, 0x41, 0x18, 0xa4, 0x82, 0x84, 0x3a, 0xcd, 0x14, 0x3b, 0x86, 0xe3, 0x9c,
	0x30, 0x8a, 0xbf, 0x2e, 0x90, 0x89, 0xda, 0x1f, 0x02, 0x5f, 0xe2, 0xe1, 0x22, 0x79, 0x0d, 0x20,
	0x99, 0x08, 0x90, 0x59, 0xb5, 0x73, 0xf5, 0xe2, 0xe0, 0xe6, 0x71, 0x05, 0x01, 0x2d, 0x05, 0x70,
	0x16, 0x42, 0x0c, 0xc7, 0x98, 0x8c, 0x02, 0x5f, 0xf6, 0xcb, 0xc8, 0x0c, 0x6d, 0xdf, 0xfe, 0x43,
	0x81, 0x03, 0xce, 0xc2, 0xa7, 0xab, 0x55, 0xd2, 0x6b, 0xd5, 0x74, 0xf2, 0xa6, 0x02, 0x45, 0x15,
	0x50, 0x32, 0x32, 0x2a, 0xd4, 0x96, 0xe1, 0x5c, 0x41, 0x23, 0xe1, 0x54, 0x33, 0x4b, 0x13, 0xe1,
	0xcf, 0x3e, 0x0e, 0xe7, 0x6e, 0x2a, 0xa3, 0xec, 0x15, 0x98, 0x1b, 0x4a, 0xd8, 0x3c, 0x8e, 0x18,
	0xee, 0x40, 0xf9, 0x0a, 0x1a, 0x2c, 0xf5, 0xd2, 0x05, 0x93, 0x33, 0xf1, 0xa4, 0x32, 0x7c, 0x03,
	0xe1, 0xa2, 0x32, 0x84, 0xbc, 0x84, 0xa3, 0x4c, 0x1a, 0x85, 0xc8, 0x98, 0x37, 0xcd, 0xc7, 0xf8,
	0x71, 0x66, 0xed, 0x66, 0x46, 0x7b, 0x08, 0xa4, 0x5f, 0xe0, 0xde, 0x53, 0xfb, 0xdf, 0xf5, 0xc3,
	0xfe, 0x4d, 0x81, 0xa3, 0x4e, 0xc0, 0xd2, 0x96, 0xbf, 0x9f, 0xf5, 0x59, 0xc0, 0xd2, 0x51, 0xe4,
	0x85, 0x98, 0xb3, 0xce, 0x0d, 0x3d, 0x2f, 0x14, 0x10, 0x7e, 0xc1, 0xb5, 0x04, 0xcd, 0xc5, 0xcd,
	0x3e, 0x6a, 0xe5, 0x7d, 0xac, 0xb4, 0xae, 0xbe, 0xd5, 0xf9, 0x9f, 0x01, 0xde, 0xe3, 0xfa, 0xc1,
	0x10, 0x54, 0x6a, 0x69, 0x5b, 0xb5, 0xde, 0x82, 0xc9, 0x5f, 0xdc, 0x4e, 0x31, 0x2c, 0xf3, 0xc8,
	0x3f, 0xa1, 0xec, 0x78, 0x44, 0xad, 0xf4, 0x08, 0x3b, 0x86, 0x93, 0x3c, 0x77, 0x5f, 0x13, 0xf6,
	0xc2, 0x7d, 0x05, 0xf5, 0x80, 0xe7, 0xcb, 0x09, 0x7d, 0x2a, 0x9a, 0xb3, 0x8d, 0x88, 0x66, 0x31,
	0xf6, 0x5f, 0x4a, 0x86, 0x36, 0x1b, 0xc3, 0xff, 0xc6, 0xcf, 0x0b, 0x68, 0x8a, 0xcb, 0x31, 0xda,
	0xb0, 0x64, 0x08, 0xc3, 0x7b, 0x5c, 0x93, 0xe7, 0xa0, 0x63, 0xe4, 0x0b, 0x57, 0x46, 0x54, 0x03,
	0x23, 0x9f, 0x3b, 0x4a, 0xd7, 0xa2, 0xfe, 0x89, 0x6b, 0xd1, 0x28, 0x5d, 0x8b, 0x2a, 0xe7, 0xfa,
	0x16, 0xe7, 0x0e, 0x1c, 0x17, 0x53, 0x26, 0x59, 0xb3, 0x40, 0x67, 0x8b, 0xc9, 0x04, 0x19, 0x13,
	0x0f, 0x31, 0x68, 0xae, 0x72, 0x4f, 0xbe, 0x0a, 0xd9, 0x53, 0x72, 0xd5, 0xfe, 0x0e, 0x88, 0x20,
	0x03, 0xc3, 0x78, 0x89, 0xff, 0xe7, 0x4b, 0x97, 0xef, 0xe0, 0xb0, 0x7c, 0x21, 0x89, 0x01, 0x5a,
	0xd7, 0x71, 0x5b, 0xe6, 0x23, 0x2e, 0xdd, 0xb5, 0xdc, 0x96, 0xa9, 0x90, 0x03, 0xd0, 0x6f, 0xef,
	0x87, 0x3d, 0xd7, 0xa1, 0x66, 0x8d, 0xe8, 0xa0, 0x0e, 0x1c, 0xd7, 0x54, 0xb9, 0xbf, 0xd3, 0x1e,
	0xb8, 0xa6, 0x76, 0xf9, 0x2d, 0x1c, 0x96, 0x7f, 0x50, 0xb8, 0xa7, 0x77, 0xdf, 0x73, 0xcc, 0x47,
	0xa4, 0x09, 0xf5, 0x1f, 0x68, 0xdb, 0x75, 0x4c, 0x85, 0x00, 0x34, 0x5a, 0xfd, 0xbe, 0xd3, 0xbb,
	0x33, 0x6b, 0x5c, 0xa6, 0x4e, 0xf7, 0xfe, 0x7b, 0xc7, 0x54, 0xb9, 0x7c, 0xe7, 0x74, 0x1c, 0xd7,
	0x31, 0xb5, 0xcb, 0x4b, 0x38, 0xaa, 0x1e, 0x07, 0x5e, 0xfa, 0x9b, 0x56, 0xbb, 0x33, 0xa4, 0xfc,
	0x6b, 0x07, 0xa0, 0x0f, 0x86, 0xb7, 0xb7, 0xce, 0x60, 0x60, 0x2a, 0x37, 0x7f, 0xd7, 0x40, 0x6d,
	0xf9, 0x33, 0xf2, 0x15, 0x34, 0x44, 0x0e, 0x92, 0xd3, 0xca, 0x75, 0x91, 0x33, 0x72, 0xf6, 0x74,
	0xcb, 0x2a, 0xb9, 0x7a, 0x03, 0x1a, 0xbf, 0x6e, 0xc4, 0x2c, 0x0e, 0x5d, 0x9e, 0xf0, 0xbc, 0x7c,
	0x24, 0xca, 0x37, 0xe6, 0x4b, 0xd0, 0x65, 0xef, 0xc8, 0x93, 0x62, 0x56, 0x37, 0xf7, 0xe2, 0xec,
	0xb4, 0x6a, 0x94, 0x59, 0x5f, 0x03, 0x6c, 0x5a, 0x45, 0x8e, 0x45, 0xcc, 0x66, 0xc5, 0x65, 0xb5,
	0x1d, 0xcd, 0x94, 0xdb, 0x49, 0x31, 0x4d, 0x02, 0x5c, 0x22, 0xdf, 0x89, 0x8f, 0xb3, 0x77, 0xef,
	0x0c, 0x79, 0x0b, 0xcd, 0x62, 0x57, 0xc8, 0x26, 0xa6, 0xbc, 0x3b, 0x67, 0xcf, 0x2a, 0xa9, 0xc5,
	0x2b, 0xdf, 0x7d, 0xfe, 0xe3, 0x67, 0xd3, 0x20, 0xfd, 0x69, 0x31, 0xbe, 0x9a, 0xc4, 0xe1, 0xf5,
	0x64, 0x31, 0xc6, 0xd5, 0xb5, 0xf8, 0xcf, 0xf2, 0x7a, 0x1a, 0x5f, 0x7b, 0xfe, 0x6c, 0xdc, 0x10,
	0xda, 0x17, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xeb, 0x92, 0xcd, 0x81, 0xce, 0x08, 0x00, 0x00,
}
